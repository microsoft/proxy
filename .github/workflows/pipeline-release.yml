name: Proxy-Release

on:
  workflow_dispatch:
    inputs:
      version: 
        description: 'Release version (x.x.x)'
        required: true
        default: '0.0.0'

jobs:
  prepare-release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - name: create release branch
      run: |
        git checkout -b release/${{ github.event.inputs.version }}

    - name: assign cmake version
      run: "((Get-Content -Path CMakeLists.txt -Raw) -Replace 'VERSION 0.1.0 # local build version','VERSION ${{ github.event.inputs.version }}') | Set-Content -Path CMakeLists.txt -NoNewLine"

    - name: commit changes
      run: |
        git config --local user.email "release-bot@no.email.com"
        git config --local user.name "release bot"
        git add CMakeLists.txt
        git commit -m 'assign a release version'

    - name: new git tag
      run: |
        git tag ${{ github.event.inputs.version }}

    - name: push git objects
      run: |
        git push origin release/${{ github.event.inputs.version }}
        git push origin ${{ github.event.inputs.version }}

  run-bvt-gcc:
    needs: prepare-release
    name: run bvt with g++
    uses: ./.github/workflows/bvt-gcc.yml
    with:
      branch: release/${{ github.event.inputs.version }}

  run-bvt-clang:
    needs: prepare-release
    name: run bvt with clang
    uses: ./.github/workflows/bvt-clang.yml
    with:
      branch: release/${{ github.event.inputs.version }}

  run-bvt-msvc:
    needs: prepare-release
    name: run bvt with msvc
    uses: ./.github/workflows/bvt-msvc.yml
    with:
      branch: release/${{ github.event.inputs.version }}

  draft-release:
    runs-on: windows-latest
    needs: [run-bvt-gcc, run-bvt-clang, run-bvt-msvc]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: release/${{ github.event.inputs.version }}

    - name: create zip archive
      run: Compress-Archive -Path ".\proxy.h" -DestinationPath ".\proxy-${{ github.event.inputs.version }}.zip"

    - uses: actions/create-release@v1
      name: create release draft
      id: release_draft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Proxy ${{ github.event.inputs.version }} Release
        draft: true
        prerelease: true

    - name: upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release_draft.outputs.upload_url }}
        asset_path: ./proxy-${{ github.event.inputs.version }}.zip
        asset_name: proxy-${{ github.event.inputs.version }}.zip
        asset_content_type: application/zip
